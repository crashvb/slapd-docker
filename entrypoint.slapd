#!/bin/bash

set -e -o pipefail

# Configure: slapd
if [[ ! -e "${EP_RUN}" ]] ; then
	log "Configuring $(basename "${0}") for first run ..."

	# https://gnutls.org/manual/html_node/Priority-Strings.html
	# https://ntk.me/2020/06/18/hardening-tls-configuration/
	# https://ciphersuite.info/cs/
	export TLS_CIPHER_SUITE="${TLS_CIPHER_SUITE:-"SECURE256:-VERS-DTLS-ALL:-VERS-TLS-ALL:-AES-256-CBC:-AES-256-CCM:-SHA1:-SIGN-RSA-SHA1:+VERS-TLS1.3:+VERS-TLS1.2:+VERS-DTLS1.2:+SIGN-RSA-SHA256:%SAFE_RENEGOTIATION:%STATELESS_COMPRESSION:%LATEST_RECORD_VERSION"}"

	# Bug Fix: If the common name of the SSL certificate doesn't match the host name of the
	#          docker container, TLS verification (TLS_REQCERT) with fail.
	envsubst <<-EOF | tee "${SLAPD_CONFIG}/ldap.conf" > /root/.ldaprc
		TLS_CACERT		/etc/ssl/certs/slapdca.crt
		TLS_CERT		/etc/ssl/certs/slapd.crt
		TLS_KEY			/etc/ssl/private/slapd.key
		TLS_REQCERT		demand
		TLS_CIPHER_SUITE	${TLS_CIPHER_SUITE}
	EOF

	# Generate passwords ...
	generate_password ldap_admin

	# Generate keypairs ...
	# Note: The container name is not a good choice, but it's better than "cn=slapd server"
	echo "subjectAltName=DNS:$(hostname),DNS:localhost,IP:127.0.0.1" > "/dev/shm/slapd.ext"
	generate_rsakey slapd "$(hostname)"

	ln --symbolic /etc/ssl/certs/slapdca.crt /usr/share/ca-certificates/
	echo slapdca.crt >> /etc/ca-certificates.conf
	update-ca-certificates

#	if [[ -e "${EP_SECRETS_ROOT}/dhparams.pem" ]] ; then
#		log "Importing dhparams.pem from secrets ..."
#	else
#		log "Generating dhparams.pem in secrets ..."
#		openssl dhparam \
#			-out "${EP_SECRETS_ROOT}/dhparams.pem" \
#			"${EP_RSA_KEY_LENGTH}"
#	fi
#	install --group=openldap --mode=0640 --owner=openldap "${EP_SECRETS_ROOT}/dhparams.pem" "${SLAPD_CONFIG}/dhparams.pem"

	if [[ ! -e "${SLAPD_DIR}/data.mdb" ]] ; then
		# Empty directory ...
		log "Initializing directory ..."
		while IFS='=' read -r key value
		do
			eval "export ${key}=\${${key}:=${value}}"
			log "	${key}=$(eval echo "\$${key}")"
		done < /usr/local/share/ldap/debconf-set-selections.defaults
		envsubst < /usr/local/share/ldap/debconf-set-selections.template | debconf-set-selections
		dpkg-reconfigure --frontend=noninteractive slapd

		# Common entries
		log "Adding common entries: slapadd ..."
		export LDAP_ADMIN_USERNAME="$(grep "olcRootDN" "${SLAPD_CONFIG}/slapd.d/cn=config/olcDatabase={1}mdb.ldif" | awk '{print $2}')"
		export LDAP_SUFFIX="${LDAP_SUFFIX:=$(grep "olcSuffix" "${SLAPD_CONFIG}/slapd.d/cn=config/olcDatabase={1}mdb.ldif" | awk '{print $2}')}"
		for i in OrganizationalUnits
		do
			log "	${i}"
			envsubst < "/usr/local/share/ldap/${i}.ldif.template" | slapadd -d 256
		done
		chown --recursive openldap:openldap "${SLAPD_CONFIG}/slapd.d/"

		# Start slapd, as there is no slapmodify
		log "Starting slapd ..."
		# For Debugging: slapd -d config -g openldap -h "ldapi:///" -u openldap &
		slapd -g openldap -h "ldapi:///" -u openldap
		while [[ ! -e /run/slapd/slapd.pid ]] ; do
			sleep 1
		done

		log "Adding common entries: ldapmodify ..."
		for i in PosixIndices TLSCertificate
		do
			log "	${i}"
			envsubst < "/usr/local/share/ldap/${i}.ldif" | ldapmodify -d 256 -H ldapi:/// -Q -Y EXTERNAL
		done

		# Stop slapd
		SLAPD_PID=$(cat /run/slapd/slapd.pid)
		if ps -p "${SLAPD_PID}" > /dev/null ; then
			log "Stopping slapd (PID: ${SLAPD_PID}) ..."
			kill "${SLAPD_PID}"
		else
			log "ERROR: slapd has crashed!"
			exit 1
		fi
	else
		log "Skipping directory initialization ..."
	fi
fi

